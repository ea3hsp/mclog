// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: mclog.proto

package mclog

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Facility int32

const (
	Facility_FACILITY_KERN         Facility = 0
	Facility_FACILITY_USER         Facility = 1
	Facility_FACILITY_MAIL         Facility = 2
	Facility_FACILITY_DAEMON       Facility = 3
	Facility_FACILITY_AUTH         Facility = 4
	Facility_FACILITY_SYSFACILITY  Facility = 5
	Facility_FACILITY_LPR          Facility = 6
	Facility_FACILITY_NEWS         Facility = 7
	Facility_FACILITY_UUCP         Facility = 8
	Facility_FACILITY_CRON         Facility = 9
	Facility_FACILITY_AUTHPRIV     Facility = 10
	Facility_FACILITY_FTP          Facility = 11
	Facility_FACILITY_NTP          Facility = 12
	Facility_FACILITY_SECURITY     Facility = 13
	Facility_FACILITY_CONSOLE      Facility = 14
	Facility_FACILITY_SOLARIS_CRON Facility = 15
	Facility_FACILITY_LOCAL_0      Facility = 16
	Facility_FACILITY_LOCAL_1      Facility = 17
	Facility_FACILITY_LOCAL_2      Facility = 18
	Facility_FACILITY_LOCAL_3      Facility = 19
	Facility_FACILITY_LOCAL_4      Facility = 20
	Facility_FACILITY_LOCAL_5      Facility = 21
	Facility_FACILITY_LOCAL_6      Facility = 22
	Facility_FACILITY_LOCAL_7      Facility = 23
)

// Enum value maps for Facility.
var (
	Facility_name = map[int32]string{
		0:  "FACILITY_KERN",
		1:  "FACILITY_USER",
		2:  "FACILITY_MAIL",
		3:  "FACILITY_DAEMON",
		4:  "FACILITY_AUTH",
		5:  "FACILITY_SYSFACILITY",
		6:  "FACILITY_LPR",
		7:  "FACILITY_NEWS",
		8:  "FACILITY_UUCP",
		9:  "FACILITY_CRON",
		10: "FACILITY_AUTHPRIV",
		11: "FACILITY_FTP",
		12: "FACILITY_NTP",
		13: "FACILITY_SECURITY",
		14: "FACILITY_CONSOLE",
		15: "FACILITY_SOLARIS_CRON",
		16: "FACILITY_LOCAL_0",
		17: "FACILITY_LOCAL_1",
		18: "FACILITY_LOCAL_2",
		19: "FACILITY_LOCAL_3",
		20: "FACILITY_LOCAL_4",
		21: "FACILITY_LOCAL_5",
		22: "FACILITY_LOCAL_6",
		23: "FACILITY_LOCAL_7",
	}
	Facility_value = map[string]int32{
		"FACILITY_KERN":         0,
		"FACILITY_USER":         1,
		"FACILITY_MAIL":         2,
		"FACILITY_DAEMON":       3,
		"FACILITY_AUTH":         4,
		"FACILITY_SYSFACILITY":  5,
		"FACILITY_LPR":          6,
		"FACILITY_NEWS":         7,
		"FACILITY_UUCP":         8,
		"FACILITY_CRON":         9,
		"FACILITY_AUTHPRIV":     10,
		"FACILITY_FTP":          11,
		"FACILITY_NTP":          12,
		"FACILITY_SECURITY":     13,
		"FACILITY_CONSOLE":      14,
		"FACILITY_SOLARIS_CRON": 15,
		"FACILITY_LOCAL_0":      16,
		"FACILITY_LOCAL_1":      17,
		"FACILITY_LOCAL_2":      18,
		"FACILITY_LOCAL_3":      19,
		"FACILITY_LOCAL_4":      20,
		"FACILITY_LOCAL_5":      21,
		"FACILITY_LOCAL_6":      22,
		"FACILITY_LOCAL_7":      23,
	}
)

func (x Facility) Enum() *Facility {
	p := new(Facility)
	*p = x
	return p
}

func (x Facility) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Facility) Descriptor() protoreflect.EnumDescriptor {
	return file_mclog_proto_enumTypes[0].Descriptor()
}

func (Facility) Type() protoreflect.EnumType {
	return &file_mclog_proto_enumTypes[0]
}

func (x Facility) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Facility.Descriptor instead.
func (Facility) EnumDescriptor() ([]byte, []int) {
	return file_mclog_proto_rawDescGZIP(), []int{0}
}

type Severity int32

const (
	Severity_SEVERITY_EMERGENCY     Severity = 0
	Severity_SEVERITY_ALERT         Severity = 1
	Severity_SEVERITY_CRITICAL      Severity = 2
	Severity_SEVERITY_ERROR         Severity = 3
	Severity_SEVERITY_WARNING       Severity = 4
	Severity_SEVERITY_NOTICE        Severity = 5
	Severity_SEVERITY_INFORMATIONAL Severity = 6
	Severity_SEVERITY_DEBUG         Severity = 7
)

// Enum value maps for Severity.
var (
	Severity_name = map[int32]string{
		0: "SEVERITY_EMERGENCY",
		1: "SEVERITY_ALERT",
		2: "SEVERITY_CRITICAL",
		3: "SEVERITY_ERROR",
		4: "SEVERITY_WARNING",
		5: "SEVERITY_NOTICE",
		6: "SEVERITY_INFORMATIONAL",
		7: "SEVERITY_DEBUG",
	}
	Severity_value = map[string]int32{
		"SEVERITY_EMERGENCY":     0,
		"SEVERITY_ALERT":         1,
		"SEVERITY_CRITICAL":      2,
		"SEVERITY_ERROR":         3,
		"SEVERITY_WARNING":       4,
		"SEVERITY_NOTICE":        5,
		"SEVERITY_INFORMATIONAL": 6,
		"SEVERITY_DEBUG":         7,
	}
)

func (x Severity) Enum() *Severity {
	p := new(Severity)
	*p = x
	return p
}

func (x Severity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Severity) Descriptor() protoreflect.EnumDescriptor {
	return file_mclog_proto_enumTypes[1].Descriptor()
}

func (Severity) Type() protoreflect.EnumType {
	return &file_mclog_proto_enumTypes[1]
}

func (x Severity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Severity.Descriptor instead.
func (Severity) EnumDescriptor() ([]byte, []int) {
	return file_mclog_proto_rawDescGZIP(), []int{1}
}

type Void struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Void) Reset() {
	*x = Void{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mclog_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Void) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Void) ProtoMessage() {}

func (x *Void) ProtoReflect() protoreflect.Message {
	mi := &file_mclog_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Void.ProtoReflect.Descriptor instead.
func (*Void) Descriptor() ([]byte, []int) {
	return file_mclog_proto_rawDescGZIP(), []int{0}
}

type LogRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Response   string `protobuf:"bytes,1,opt,name=Response,proto3" json:"Response,omitempty"`
	Updated_At int64  `protobuf:"varint,2,opt,name=Updated_At,json=UpdatedAt,proto3" json:"Updated_At,omitempty"`
}

func (x *LogRes) Reset() {
	*x = LogRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mclog_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogRes) ProtoMessage() {}

func (x *LogRes) ProtoReflect() protoreflect.Message {
	mi := &file_mclog_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogRes.ProtoReflect.Descriptor instead.
func (*LogRes) Descriptor() ([]byte, []int) {
	return file_mclog_proto_rawDescGZIP(), []int{1}
}

func (x *LogRes) GetResponse() string {
	if x != nil {
		return x.Response
	}
	return ""
}

func (x *LogRes) GetUpdated_At() int64 {
	if x != nil {
		return x.Updated_At
	}
	return 0
}

type LogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Log *Log `protobuf:"bytes,1,opt,name=Log,proto3" json:"Log,omitempty"`
}

func (x *LogReq) Reset() {
	*x = LogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mclog_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogReq) ProtoMessage() {}

func (x *LogReq) ProtoReflect() protoreflect.Message {
	mi := &file_mclog_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogReq.ProtoReflect.Descriptor instead.
func (*LogReq) Descriptor() ([]byte, []int) {
	return file_mclog_proto_rawDescGZIP(), []int{2}
}

func (x *LogReq) GetLog() *Log {
	if x != nil {
		return x.Log
	}
	return nil
}

type Log struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Facility   Facility `protobuf:"varint,1,opt,name=Facility,proto3,enum=mclog.Facility" json:"Facility,omitempty"`
	Severity   Severity `protobuf:"varint,2,opt,name=Severity,proto3,enum=mclog.Severity" json:"Severity,omitempty"`
	Created_At int64    `protobuf:"varint,3,opt,name=Created_At,json=CreatedAt,proto3" json:"Created_At,omitempty"`
	Message    string   `protobuf:"bytes,4,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *Log) Reset() {
	*x = Log{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mclog_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Log) ProtoMessage() {}

func (x *Log) ProtoReflect() protoreflect.Message {
	mi := &file_mclog_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Log.ProtoReflect.Descriptor instead.
func (*Log) Descriptor() ([]byte, []int) {
	return file_mclog_proto_rawDescGZIP(), []int{3}
}

func (x *Log) GetFacility() Facility {
	if x != nil {
		return x.Facility
	}
	return Facility_FACILITY_KERN
}

func (x *Log) GetSeverity() Severity {
	if x != nil {
		return x.Severity
	}
	return Severity_SEVERITY_EMERGENCY
}

func (x *Log) GetCreated_At() int64 {
	if x != nil {
		return x.Created_At
	}
	return 0
}

func (x *Log) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var file_mclog_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FileOptions)(nil),
		ExtensionType: (*string)(nil),
		Field:         50000,
		Name:          "mclog.proto_version",
		Tag:           "bytes,50000,opt,name=proto_version",
		Filename:      "mclog.proto",
	},
}

// Extension fields to descriptorpb.FileOptions.
var (
	// optional string proto_version = 50000;
	E_ProtoVersion = &file_mclog_proto_extTypes[0]
)

var File_mclog_proto protoreflect.FileDescriptor

var file_mclog_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6d, 0x63, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6d,
	0x63, 0x6c, 0x6f, 0x67, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x06, 0x0a, 0x04, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x43,
	0x0a, 0x06, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0x26, 0x0a, 0x06, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a,
	0x03, 0x4c, 0x6f, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x6d, 0x63, 0x6c,
	0x6f, 0x67, 0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x03, 0x4c, 0x6f, 0x67, 0x22, 0x98, 0x01, 0x0a, 0x03,
	0x4c, 0x6f, 0x67, 0x12, 0x2b, 0x0a, 0x08, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x6d, 0x63, 0x6c, 0x6f, 0x67, 0x2e, 0x46, 0x61,
	0x63, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x08, 0x46, 0x61, 0x63, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x12, 0x2b, 0x0a, 0x08, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x6d, 0x63, 0x6c, 0x6f, 0x67, 0x2e, 0x53, 0x65, 0x76, 0x65, 0x72,
	0x69, 0x74, 0x79, 0x52, 0x08, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a,
	0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2a, 0x83, 0x04, 0x0a, 0x08, 0x46, 0x61, 0x63, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x41, 0x43, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f,
	0x4b, 0x45, 0x52, 0x4e, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x41, 0x43, 0x49, 0x4c, 0x49,
	0x54, 0x59, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x41, 0x43,
	0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x4d, 0x41, 0x49, 0x4c, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f,
	0x46, 0x41, 0x43, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x44, 0x41, 0x45, 0x4d, 0x4f, 0x4e, 0x10,
	0x03, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x41, 0x43, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x41, 0x55,
	0x54, 0x48, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x46, 0x41, 0x43, 0x49, 0x4c, 0x49, 0x54, 0x59,
	0x5f, 0x53, 0x59, 0x53, 0x46, 0x41, 0x43, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x10, 0x05, 0x12, 0x10,
	0x0a, 0x0c, 0x46, 0x41, 0x43, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x4c, 0x50, 0x52, 0x10, 0x06,
	0x12, 0x11, 0x0a, 0x0d, 0x46, 0x41, 0x43, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x4e, 0x45, 0x57,
	0x53, 0x10, 0x07, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x41, 0x43, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f,
	0x55, 0x55, 0x43, 0x50, 0x10, 0x08, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x41, 0x43, 0x49, 0x4c, 0x49,
	0x54, 0x59, 0x5f, 0x43, 0x52, 0x4f, 0x4e, 0x10, 0x09, 0x12, 0x15, 0x0a, 0x11, 0x46, 0x41, 0x43,
	0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x50, 0x52, 0x49, 0x56, 0x10, 0x0a,
	0x12, 0x10, 0x0a, 0x0c, 0x46, 0x41, 0x43, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x46, 0x54, 0x50,
	0x10, 0x0b, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x41, 0x43, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x4e,
	0x54, 0x50, 0x10, 0x0c, 0x12, 0x15, 0x0a, 0x11, 0x46, 0x41, 0x43, 0x49, 0x4c, 0x49, 0x54, 0x59,
	0x5f, 0x53, 0x45, 0x43, 0x55, 0x52, 0x49, 0x54, 0x59, 0x10, 0x0d, 0x12, 0x14, 0x0a, 0x10, 0x46,
	0x41, 0x43, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x4f, 0x4e, 0x53, 0x4f, 0x4c, 0x45, 0x10,
	0x0e, 0x12, 0x19, 0x0a, 0x15, 0x46, 0x41, 0x43, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x53, 0x4f,
	0x4c, 0x41, 0x52, 0x49, 0x53, 0x5f, 0x43, 0x52, 0x4f, 0x4e, 0x10, 0x0f, 0x12, 0x14, 0x0a, 0x10,
	0x46, 0x41, 0x43, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x5f, 0x30,
	0x10, 0x10, 0x12, 0x14, 0x0a, 0x10, 0x46, 0x41, 0x43, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x4c,
	0x4f, 0x43, 0x41, 0x4c, 0x5f, 0x31, 0x10, 0x11, 0x12, 0x14, 0x0a, 0x10, 0x46, 0x41, 0x43, 0x49,
	0x4c, 0x49, 0x54, 0x59, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x5f, 0x32, 0x10, 0x12, 0x12, 0x14,
	0x0a, 0x10, 0x46, 0x41, 0x43, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x4c,
	0x5f, 0x33, 0x10, 0x13, 0x12, 0x14, 0x0a, 0x10, 0x46, 0x41, 0x43, 0x49, 0x4c, 0x49, 0x54, 0x59,
	0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x5f, 0x34, 0x10, 0x14, 0x12, 0x14, 0x0a, 0x10, 0x46, 0x41,
	0x43, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x5f, 0x35, 0x10, 0x15,
	0x12, 0x14, 0x0a, 0x10, 0x46, 0x41, 0x43, 0x49, 0x4c, 0x49, 0x54, 0x59, 0x5f, 0x4c, 0x4f, 0x43,
	0x41, 0x4c, 0x5f, 0x36, 0x10, 0x16, 0x12, 0x14, 0x0a, 0x10, 0x46, 0x41, 0x43, 0x49, 0x4c, 0x49,
	0x54, 0x59, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x4c, 0x5f, 0x37, 0x10, 0x17, 0x2a, 0xbc, 0x01, 0x0a,
	0x08, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x45, 0x56,
	0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x45, 0x4d, 0x45, 0x52, 0x47, 0x45, 0x4e, 0x43, 0x59, 0x10,
	0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x41, 0x4c,
	0x45, 0x52, 0x54, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54,
	0x59, 0x5f, 0x43, 0x52, 0x49, 0x54, 0x49, 0x43, 0x41, 0x4c, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e,
	0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03,
	0x12, 0x14, 0x0a, 0x10, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x57, 0x41, 0x52,
	0x4e, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x45, 0x56, 0x45, 0x52, 0x49,
	0x54, 0x59, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x43, 0x45, 0x10, 0x05, 0x12, 0x1a, 0x0a, 0x16, 0x53,
	0x45, 0x56, 0x45, 0x52, 0x49, 0x54, 0x59, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x52, 0x4d, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x10, 0x06, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x45, 0x56, 0x45, 0x52,
	0x49, 0x54, 0x59, 0x5f, 0x44, 0x45, 0x42, 0x55, 0x47, 0x10, 0x07, 0x32, 0x31, 0x0a, 0x0a, 0x4c,
	0x6f, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x03, 0x4c, 0x6f, 0x67,
	0x12, 0x0d, 0x2e, 0x6d, 0x63, 0x6c, 0x6f, 0x67, 0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x1a,
	0x0d, 0x2e, 0x6d, 0x63, 0x6c, 0x6f, 0x67, 0x2e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x3a, 0x46,
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd0, 0x86,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x33, 0x5a, 0x23, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x61, 0x33, 0x68, 0x73, 0x70, 0x2f, 0x6d, 0x63, 0x6c, 0x6f,
	0x67, 0x2f, 0x6d, 0x63, 0x6c, 0x6f, 0x67, 0x3b, 0x6d, 0x63, 0x6c, 0x6f, 0x67, 0x82, 0xb5, 0x18,
	0x0a, 0x30, 0x2e, 0x35, 0x2e, 0x30, 0x2d, 0x62, 0x65, 0x74, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_mclog_proto_rawDescOnce sync.Once
	file_mclog_proto_rawDescData = file_mclog_proto_rawDesc
)

func file_mclog_proto_rawDescGZIP() []byte {
	file_mclog_proto_rawDescOnce.Do(func() {
		file_mclog_proto_rawDescData = protoimpl.X.CompressGZIP(file_mclog_proto_rawDescData)
	})
	return file_mclog_proto_rawDescData
}

var file_mclog_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_mclog_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_mclog_proto_goTypes = []interface{}{
	(Facility)(0),                    // 0: mclog.Facility
	(Severity)(0),                    // 1: mclog.Severity
	(*Void)(nil),                     // 2: mclog.Void
	(*LogRes)(nil),                   // 3: mclog.LogRes
	(*LogReq)(nil),                   // 4: mclog.LogReq
	(*Log)(nil),                      // 5: mclog.Log
	(*descriptorpb.FileOptions)(nil), // 6: google.protobuf.FileOptions
}
var file_mclog_proto_depIdxs = []int32{
	5, // 0: mclog.LogReq.Log:type_name -> mclog.Log
	0, // 1: mclog.Log.Facility:type_name -> mclog.Facility
	1, // 2: mclog.Log.Severity:type_name -> mclog.Severity
	6, // 3: mclog.proto_version:extendee -> google.protobuf.FileOptions
	4, // 4: mclog.LogService.Log:input_type -> mclog.LogReq
	3, // 5: mclog.LogService.Log:output_type -> mclog.LogRes
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	3, // [3:4] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_mclog_proto_init() }
func file_mclog_proto_init() {
	if File_mclog_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mclog_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Void); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mclog_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mclog_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mclog_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Log); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mclog_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   4,
			NumExtensions: 1,
			NumServices:   1,
		},
		GoTypes:           file_mclog_proto_goTypes,
		DependencyIndexes: file_mclog_proto_depIdxs,
		EnumInfos:         file_mclog_proto_enumTypes,
		MessageInfos:      file_mclog_proto_msgTypes,
		ExtensionInfos:    file_mclog_proto_extTypes,
	}.Build()
	File_mclog_proto = out.File
	file_mclog_proto_rawDesc = nil
	file_mclog_proto_goTypes = nil
	file_mclog_proto_depIdxs = nil
}
